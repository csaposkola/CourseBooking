@using DotNetNuke.Web.Client.ClientResourceManagement
@using DotNetNuke.Framework.JavaScriptLibraries
@using System.Linq
@using CourseBooking.Models
@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<CourseScheduleEntity>

@{
    DotNetNuke.Framework.JavaScriptLibraries.JavaScript.RequestRegistration(CommonJs.jQuery);
    DotNetNuke.Framework.JavaScriptLibraries.JavaScript.RequestRegistration(CommonJs.jQueryUI);

    var coursePlans = ViewBag.CoursePlans as IEnumerable<CoursePlanEntity> ?? Enumerable.Empty<CoursePlanEntity>();
    var localStartTime = Model.StartTime.ToLocalTime();
}

<div class="admin-course-schedule-form">
    <h2>Tanfolyam időpont szerkesztése</h2>

    <form action="@Url.Action("Edit", "ScheduleAdmin")" method="post" class="form-horizontal" role="form">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" name="ID" value="@Model.ID" />
        <input type="hidden" name="CreatedByUserID" value="@Model.CreatedByUserID" />
        <input type="hidden" name="CreatedDate" value="@Model.CreatedDate" />

        <div class="form-group">
            <label class="control-label col-md-3">Tanfolyam terv</label>
            <div class="col-md-9">
                <select id="CoursePlanID" name="CoursePlanID" class="form-control" required>
                    <option value="">Válasszon tanfolyamot</option>
                    @foreach (var plan in coursePlans)
                    {
                        <option value="@plan.ID" data-max-capacity="@plan.MaxCapacity" data-duration="@plan.DurationHours"
                                @(plan.ID == Model.CoursePlanID ? "selected" : "")>
                            @plan.Name (@plan.DurationHours óra, @plan.CourseCategory)
                        </option>
                    }
                </select>
                @Html.ValidationMessageFor(m => m.CoursePlanID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">Kezdési időpont</label>
            <div class="col-md-9">
                <div class="row">
                    <div class="col-md-6">
                        <input type="date" id="StartDate" name="StartDate" class="form-control" required
                               value="@localStartTime.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-6">
                        <input type="time" id="StartTime" name="StartTime" class="form-control" required
                               value="@localStartTime.ToString("HH:mm")" />
                    </div>
                </div>
                <small class="text-muted">A kezdési időpont a helyi időzóna szerint.</small>
                @Html.ValidationMessageFor(m => m.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3">Elérhető helyek</label>
            <div class="col-md-9">
                <div class="row">
                    <div class="col-md-6">
                        <input type="number" id="AvailableSeats" name="AvailableSeats" class="form-control" required min="1" max="100"
                               value="@Model.AvailableSeats" />
                    </div>
                    <div class="col-md-6">
                        <p class="form-control-static">Jelenlegi foglalások: <strong>@Model.BookingCount</strong></p>
                    </div>
                </div>
                <small class="text-muted">Figyelem! A helyek számának csökkentésekor ellenőrizze, hogy nem kevesebb-e, mint a foglalások száma.</small>
                @Html.ValidationMessageFor(m => m.AvailableSeats, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <div class="checkbox">
                    <label>
                        <input type="checkbox" id="IsActive" name="IsActive" value="true" @(Model.IsActive ? "checked" : "") /> Aktív
                        <input type="hidden" name="IsActive" value="false" />
                    </label>
                </div>
                <small class="text-muted">Ha inaktívvá teszi, a felhasználók nem fogják látni ezt az időpontot.</small>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <button type="submit" class="btn btn-primary">Mentés</button>
                <a href="@Url.Action("Index")" class="btn btn-default">Mégse</a>
            </div>
        </div>
    </form>
</div>

@{
    ClientResourceManager.RegisterStyleSheet(Dnn.DnnPage, "~/DesktopModules/MVC/CourseBooking/module.css");
}

<script type="text/javascript">
    $(document).ready(function() {
        // Set default available seats based on course plan
        $('#CoursePlanID').change(function() {
            var selectedOption = $(this).find('option:selected');
            var maxCapacity = selectedOption.data('max-capacity');

            // Only update if the current booking count is less than the new max capacity
            var currentBookingCount = @Model.BookingCount;
            if (maxCapacity && maxCapacity > currentBookingCount) {
                $('#AvailableSeats').val(maxCapacity);
            } else if (maxCapacity && maxCapacity < currentBookingCount) {
                alert('Figyelem! A kiválasztott tanfolyamterv maximális kapacitása (' + maxCapacity + ') kisebb, mint a jelenlegi foglalások száma (' + currentBookingCount + ').');
            }
        });

        // Form submission handling
        $('form').submit(function(e) {
            // Validate that available seats is not less than current bookings
            var availableSeats = parseInt($('#AvailableSeats').val());
            var currentBookingCount = @Model.BookingCount;

            if (availableSeats < currentBookingCount) {
                alert('Hiba! Az elérhető helyek száma nem lehet kevesebb, mint a jelenlegi foglalások száma (' + currentBookingCount + ').');
                e.preventDefault();
                return false;
            }

            // Combine date and time inputs into StartTime field
            var startDate = $('#StartDate').val();
            var startTime = $('#StartTime').val();

            if (startDate && startTime) {
                // Create a hidden field for the actual StartTime
                $('<input>').attr({
                    type: 'hidden',
                    name: 'StartTime',
                    value: startDate + 'T' + startTime + ':00'
                }).appendTo('form');
            }
        });
    });
</script>