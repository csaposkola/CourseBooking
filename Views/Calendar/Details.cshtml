@using System.Web.Mvc
@using DotNetNuke.Web.Client.ClientResourceManagement
@using DotNetNuke.Framework.JavaScriptLibraries
@using CourseBooking.Models
@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<CourseScheduleEntity>

@{
    // Request required scripts (jQuery is still useful for general UI like copy button, modal close)
    DotNetNuke.Framework.JavaScriptLibraries.JavaScript.RequestRegistration(CommonJs.jQuery);
    // DotNetNuke.Framework.JavaScriptLibraries.JavaScript.RequestRegistration(CommonJs.jQueryUI); // Not strictly needed unless using UI widgets
    // AntiForgery support is still needed for the standard POST
    DotNetNuke.Framework.ServicesFramework.Instance.RequestAjaxAntiForgerySupport();

    var localStartTime = Model.StartTime.ToLocalTime();
    var localEndTime = Model.EndTime.ToLocalTime();
    var isRegistered = ViewBag.IsRegistered as bool? ?? false;
    var userBooking = ViewBag.UserBooking as BookingEntity;
    var canRegister = ViewBag.CanRegister as bool? ?? false;
    // We keep isAjax check in case this view is loaded via AJAX for *display*
    var isAjax = Request.QueryString["isAjax"] == "true" || Request.IsAjaxRequest();

    if (isAjax)
    {
        Layout = null; // Use no layout if loaded for display in a modal
    }
}

<div class="course-booking-detail">

    @* ADDED: Display TempData messages after redirects *@
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @* END ADDED *@

    <div class="booking-details-container booking-details-stacked">
        <div class="booking-section full-width">
            <h3>Mit kell tudni a tanfolyamról?</h3>
            <div class="form-horizontal">
                @* ... (Course detail fields remain the same) ... *@
                 <div class="form-group">
                    <label class="control-label col-md-4">Tanfolyam neve</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@Model.CoursePlan.Name</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Kategória</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@Model.CoursePlan.CourseCategory</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Dátum</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@localStartTime.ToString("yyyy. MMMM d.")</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Időpont</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@localStartTime.ToString("HH:mm") - @localEndTime.ToString("HH:mm")</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Időtartam</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@Model.CoursePlan.DurationHours óra</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Ár</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@Model.CoursePlan.Price.ToString("N0") Ft</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Szabad helyek</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@Model.RemainingSeats / @Model.AvailableSeats</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Leírás</label>
                    <div class="col-md-8">
                        <div class="form-control-static">@Html.Raw(Model.CoursePlan.Description)</div>
                    </div>
                </div>
                @if (!string.IsNullOrEmpty(Model.CoursePlan.PrerequisiteIds))
                {
                <div class="form-group">
                    <label class="control-label col-md-4">Előfeltételek</label>
                    <div class="col-md-8">
                        <p class="form-control-static">@Model.CoursePlan.PrerequisiteIds</p>
                    </div>
                </div>
                }
            </div> @* end form-horizontal *@
        </div>

        @if (isRegistered && userBooking != null)
        {
            @* ... (Existing booking details remain the same) ... *@
             <div class="booking-section full-width">
                 <h3>Az Ön foglalása</h3>
                 <div class="form-horizontal">
                     <div class="form-group">
                         <label class="control-label col-md-4">Foglalás azonosító</label>
                         <div class="col-md-8">
                             <p class="form-control-static">@userBooking.ID</p>
                         </div>
                     </div>
                     <div class="form-group">
                         <label class="control-label col-md-4">Foglalás ideje</label>
                         <div class="col-md-8">
                             <p class="form-control-static">@userBooking.BookingTime.ToLocalTime().ToString("yyyy. MM. dd. HH:mm")</p>
                         </div>
                     </div>
                     <div class="form-group">
                         <label class="control-label col-md-4">Állapot</label>
                         <div class="col-md-8">
                             <p class="form-control-static @(userBooking.IsCancelled ? "text-danger" : "text-success")">
                                 @(userBooking.IsCancelled ? "Lemondva" : "Aktív")
                             </p>
                         </div>
                     </div>
                     @if (!string.IsNullOrEmpty(userBooking.VoucherCode))
                     {
                     <div class="form-group">
                         <label class="control-label col-md-4">Kupon kód</label>
                         <div class="col-md-8">
                             <div class="input-group" style="max-width: 250px;">
                                 <span class="form-control" id="voucherCode" style="background-color: #eee;">@userBooking.VoucherCode</span>
                                 <span class="input-group-btn">
                                             <button type="button" id="copyVoucher" class="btn btn-default" title="Kód másolása">
                                                 <i class="fa fa-copy"></i>
                                             </button>
                                         </span>
                             </div>
                         </div>
                     </div>
                     }
                     <div class="form-group">
                         <label class="control-label col-md-4">Fizetési állapot</label>
                         <div class="col-md-8">
                             <p class="form-control-static">@userBooking.PaymentStatus</p>
                         </div>
                     </div>
                 </div>
             </div>
        }
        else if (Request.IsAuthenticated && canRegister)
        {
            <div class="registration-section full-width">
                <h3>Foglalás</h3>

                @* --- Standard Form - No onsubmit handler needed here anymore --- *@
                <form id="bookingForm"
                      action="@Url.Action("Register", "Calendar")" @* Still set the correct default action *@
                      method="post"
                      class="form-horizontal"
                      role="form">

                    @Html.AntiForgeryToken()
                    <input type="hidden" name="scheduleId" value="@Model.ID" /> @* Ensure name matches controller parameter *@

                    <div class="form-group">
                        <label for="bookingNotes" class="control-label col-md-4">Megjegyzés (opcionális)</label>
                        <div class="col-md-8">
                            <textarea id="bookingNotes" name="notes" class="form-control" rows="3"></textarea>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                             @* --- Button type="button", onclick calls initiateBookingSubmit --- *@
                            <button type="button" id="submitBooking" class="btn btn-primary btn-lg"
                                    onclick="initiateBookingSubmit();">
                                Foglalás véglegesítése
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        }
        else if (!Request.IsAuthenticated)
        {
            @* ... (Login message remains the same) ... *@
             <div class="registration-message full-width">
                <div class="alert alert-info">
                    <strong>Figyelem!</strong> A foglaláshoz <a href="@DotNetNuke.Common.Globals.NavigateURL(Dnn.PortalSettings.LoginTabId)">be kell jelentkeznie</a>.
                </div>
            </div>
        }
        else if (Model.RemainingSeats <= 0)
        {
            @* ... (No seats message remains the same) ... *@
              <div class="registration-message full-width">
                <div class="alert alert-warning">
                    <strong>Sajnáljuk!</strong> Erre a tanfolyamra már minden hely betelt.
                </div>
            </div>
        }
        else if (isRegistered)
        {
            @* ... (Already registered messages remain the same) ... *@
             if (userBooking == null || !userBooking.IsCancelled) {
            <div class="registration-message full-width">
                <div class="alert alert-info">
                    <strong>Információ:</strong> Ön már regisztrált erre a tanfolyamra. A foglalás részleteit fentebb láthatja.
                </div>
            </div>
            } else if (userBooking != null && userBooking.IsCancelled) {
            <div class="registration-message full-width">
                <div class="alert alert-warning">
                    <strong>Információ:</strong> Ön korábban lemondta a foglalását erre a tanfolyamra.
                </div>
            </div>
            }
        }
        else if (!canRegister) {
            @* ... (Cannot register message remains the same) ... *@
              <div class="registration-message full-width">
                <div class="alert alert-warning">
                    <strong>Információ:</strong> Jelenleg nem tud jelentkezni erre a tanfolyamra.
                </div>
            </div>
        }
    </div>

    <div class="booking-actions text-right" style="padding: 15px; border-top: 1px solid #eee; margin-top: 15px;">
        @if (isRegistered && userBooking != null && !userBooking.IsCancelled && Model.StartTime > DateTime.UtcNow.AddHours(24))
        {
            @* Cancellation form also reverts to standard POST *@
            <form action="@Url.Action("Cancel", "Calendar", new { id = userBooking.ID })"
                  method="post"
                  class="cancel-form"
                  style="display: inline-block; margin-right: 10px;"
                  onsubmit="return confirm('Biztosan lemondja a foglalást?');">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger">Foglalás lemondása</button>
            </form>
        }

        <button type="button" class="btn btn-default modal-close">Bezárás</button>
    </div>
</div>


@* UPDATED script block containing initiateBookingSubmit using closest() *@
<script type="text/javascript">
    function initiateBookingSubmit() {
        console.log("initiateBookingSubmit called.");

        // 1. Show confirmation dialog
        if (!confirm('Biztosan véglegesíti a foglalást?')) {
            console.log("User cancelled confirmation.");
            return; // Stop if user clicks Cancel
        }
        console.log("User confirmed.");

        // 2. Get the button that was clicked and disable it
        var button = document.getElementById('submitBooking'); // We still need the button
        if (button) {
            button.disabled = true;
            button.innerHTML = '<i class="fa fa-spinner fa-spin"></i> Feldolgozás...';
        } else {
             console.error("Submit button #submitBooking not found!");
             return; // Stop if button is missing
        }

        // 3. Find the form RELATIVE to the button using jQuery's .closest()
        // This is more reliable than getElementById
        var form = $(button).closest('form')[0]; // Get the raw DOM element

        if (form) {
            console.log("Booking form found relative to button.");
            // Ensure correct action URL
            form.action = '@Url.Action("Register", "Calendar")';
            console.log('Form action explicitly set to: ' + form.action);

            // 4. Manually submit the form
            console.log('Calling form.submit()...');
            form.submit(); // This bypasses jQuery handlers and UpdatePanel interception more reliably
        } else {
            // This error should be much less likely now
            console.error('Booking form could not be found via closest()! Cannot submit.');
             // Re-enable button if form not found
             if(button) {
                 button.disabled = false;
                 button.innerHTML = 'Foglalás véglegesítése';
             }
        }
    }

    // Keep the existing document.ready for modal-close and copy-voucher if needed
    $(document).ready(function() {
         console.log("Details.cshtml: Document ready, setting up modal-close and copy-voucher handlers.");
        // Modal close button functionality (if needed)
        $(".modal-close").on("click", function() {
             console.log("Modal close clicked.");
             if (window.parent && window.parent.jQuery && window.parent.jQuery('#courseBookingModal').dialog('instance')) {
                window.parent.jQuery('#courseBookingModal').dialog('close');
            } else if (typeof jQuery !== 'undefined' && $('#courseBookingModal').dialog('instance')) {
                $('#courseBookingModal').dialog('close');
            } else if (window.opener) {
                window.close();
            } else {
                window.history.back(); // Go back to previous page
            }
        });

        // Copy voucher code functionality (if needed)
        $("#copyVoucher").click(function () {
            console.log("Copy voucher clicked.");
            var voucherText = $("#voucherCode").text() || $(this).closest('.input-group').find('.form-control').text();
            if(!voucherText) {
                console.log("No voucher text found.");
                return;
            }
             var tempInput = $("<input>");
            $("body").append(tempInput);
            tempInput.val(voucherText).select();
            try {
                document.execCommand("copy");
                var $btn = $(this);
                var originalHtml = $btn.html();
                $btn.html('<i class="fa fa-check"></i>').prop('disabled', true);
                setTimeout(function () { $btn.html(originalHtml).prop('disabled', false); }, 1500);
            } catch (e) {
                console.error("Failed to copy voucher code:", e);
                alert("Másolás sikertelen.");
            }
            tempInput.remove();
        });
    });
</script>

@* Include stylesheet if needed *@
@{
    DotNetNuke.Web.Client.ClientResourceManagement.ClientResourceManager.RegisterStyleSheet(Dnn.DnnPage, "~/DesktopModules/MVC/CourseBooking/module.css");
}